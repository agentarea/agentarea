name: mcp-infrastructure
services:
  caddy:
    image: caddy:2.8-alpine
    container_name: mcp-caddy
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
      - "2019:2019"  # Caddy API
      - "8000:8000"  # API access
    volumes:
      - mcp_caddy_data:/data
      - mcp_caddy_config:/config
      - ./caddy/Caddyfile:/etc/caddy/Caddyfile:ro
    networks:
      - mcp-network
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:2019/config/"] 
      interval: 30s
      timeout: 10s
      retries: 3
    command: ["caddy", "run", "--config", "/etc/caddy/Caddyfile", "--adapter", "caddyfile"]

  mcp-manager:
    build:
      context: ./go-mcp-manager
      dockerfile: Dockerfile
    container_name: mcp-manager
    restart: unless-stopped
    privileged: true
    expose:
      - "8000"
    tmpfs:
      - /tmp
      - /run
    volumes:
      - mcp_containers:/var/lib/containers/storage
      - ./docker/templates:/app/templates:ro
      - /sys/fs/cgroup:/sys/fs/cgroup:rw
    networks:
      - mcp-network
    environment:
      - LOG_LEVEL=INFO
      - LOG_FORMAT=json
      - CADDY_API_URL=http://caddy:2019
      - CADDY_HOST=caddy
      - CONTAINERS_STORAGE_DRIVER=overlay
      - CONTAINERS_STORAGE_RUNROOT=/tmp/containers
      - CONTAINERS_STORAGE_GRAPHROOT=/var/lib/containers/storage
      - TEMPLATES_DIR=/app/templates
    depends_on:
      caddy:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

networks:
  mcp-network:
    driver: bridge

volumes:
  mcp_containers:
    driver: local
  mcp_caddy_data:
    driver: local
  mcp_caddy_config:
    driver: local 