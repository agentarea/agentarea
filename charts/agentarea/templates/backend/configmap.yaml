{{- if .Values.backend.enabled }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "agentarea.fullname" . }}-backend-env
  labels:
    {{- include "agentarea.labels" . | nindent 4 }}
    app.kubernetes.io/component: backend
data:
  # Server settings
  PORT: "8000"
  LOG_LEVEL: "info"
  DEV_MODE: "false"

  # Database configuration
  POSTGRES_HOST: "{{ .Release.Name }}-postgresql"
  POSTGRES_PORT: "{{ .Values.global.database.port }}"
  POSTGRES_DB: "{{ .Values.global.database.database }}"

  # Redis configuration (for URL construction in deployment)
  REDIS_HOST: "{{ .Release.Name }}-redis-master"
  REDIS_PORT: "{{ .Values.global.redis.port }}"

  # S3/MinIO configuration
  AWS_REGION: "{{ .Values.global.storage.region }}"
  S3_BUCKET_NAME: "{{ .Values.global.storage.bucket }}"
  AWS_ENDPOINT_URL: "http://{{ .Release.Name }}-minio:9000"

  # MCP Manager configuration
  MCP_MANAGER_URL: "http://{{ include "agentarea.fullname" . }}-mcp-manager/api/mcp"
  MCP_PROXY_HOST: "http://{{ include "agentarea.fullname" . }}-mcp-manager"
  MCP_CLIENT_TIMEOUT: "30"

  # Temporal/Workflow configuration
  WORKFLOW__TEMPORAL_SERVER_URL: "{{ include "agentarea.fullname" . }}-temporal:{{ .Values.global.temporal.port }}"
  WORKFLOW__TEMPORAL_NAMESPACE: "{{ .Values.global.temporal.namespace }}"
  WORKFLOW__TEMPORAL_TASK_QUEUE: "{{ .Values.global.temporal.taskQueue }}"
{{- end }}
