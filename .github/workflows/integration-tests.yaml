name: Integration Tests
on:
  push:
    paths:
      - "core/**"
      - ".github/**"
    branches:
      - main
  pull_request:
    paths:
      - "core/**"
      - ".github/**"
    branches:
      - main

env:
  DATABASE_URL: postgresql://postgres:postgres@localhost:5432/agentarea_test
  REDIS_URL: redis://localhost:6379/0

defaults:
  run:
    working-directory: ./core/

jobs:
  integration-tests:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: agentarea_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
      
      redis:
        image: redis:7
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379

    steps:
      - name: Clone repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Install uv
        uses: astral-sh/setup-uv@v3
        with:
          version: "latest"

      - name: Cache uv
        uses: actions/cache@v3
        with:
          path: ~/.cache/uv
          key: uv-${{ runner.os }}-${{ hashFiles('**/uv.lock') }}
          restore-keys: |
            uv-${{ runner.os }}-

      - name: Install dependencies with dev dependencies
        run: uv sync --all-extras --dev

      - name: Run database migrations
        run: uv run alembic upgrade head
        env:
          DATABASE_URL: ${{ env.DATABASE_URL }}

      - name: Run integration tests
        run: uv run python -m pytest tests/integration/ --tb=short -v
        env:
          DATABASE_URL: ${{ env.DATABASE_URL }}
          REDIS_URL: ${{ env.REDIS_URL }} 