name: Backend CI workflow
on:
  push:
    paths:
      - "core/**"
      - ".github/**"
    branches:
      - main

env:
  CONTAINER_NAME: agentarea-core

defaults:
  run:
    working-directory: ./core/

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Clone repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Install uv
        uses: astral-sh/setup-uv@v3
        with:
          version: "latest"

      - name: Cache uv
        uses: actions/cache@v3
        with:
          path: ~/.cache/uv
          key: uv-${{ runner.os }}-${{ hashFiles('**/uv.lock') }}
          restore-keys: |
            uv-${{ runner.os }}-

      - name: Install dependencies
        run: uv sync --dev

      - name: Run ruff linting
        run: uv run ruff check .

      - name: Run ruff formatting check
        run: uv run ruff format --check .

      - name: Run unit tests
        run: uv run python -m pytest tests/unit/ --tb=short -v

      - name: Build project
        run: uv build

  build-container:
    if: github.ref == 'refs/heads/main'
    needs:
      - build
    runs-on: ubuntu-latest
    steps:
      - name: Clone repository
        uses: actions/checkout@v4
      - name: Login to Yandex Cloud Container Registry
        id: login-cr
        uses: yc-actions/yc-cr-login@v2
        with:
          yc-sa-json-credentials: ${{ secrets.YANDEX_SA_KEY }}
      - run: |
          echo "Packaging docker image ..."
          tag="${DOCKER_REGISTRY}/${CONTAINER_NAME}"
          docker build -t $tag:latest -t $tag:${{ github.sha }} .
          docker push $tag --all-tags
        env:
          DOCKER_REGISTRY: cr.yandex/${{ secrets.YANDEX_CONTAINER_REGISTRY_ID }}
