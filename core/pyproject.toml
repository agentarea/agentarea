[project]
name = "core"
version = "0.1.0"
authors = [
    { name="Artem Astapenko", email="artem.astapenko@agentarea.ai" },
    { name="Julia Astapenko", email="julia.astapenko@agentarea.ai" },
]
description = "Add your description here"
readme = "README.md"
requires-python = ">=3.12"
dependencies = [
    "alembic>=1.15.2",
    "uvicorn>=0.34.0",
    "fastapi>=0.104.0",
    "python-multipart>=0.0.6",
    "pydantic>=2.4.2",
    "pyyaml>=6.0.1",
    "boto3>=1.34.0",
    "pydantic-settings>=2.0.0",
    "botocore>=1.36.16",
    "sqlalchemy>=2.0.23",
    "psycopg2-binary>=2.9.9",
    "click>=8.1.8",
    "asyncpg>=0.30.0",
    "infisicalsdk>=1.0.8",
    "returns>=0.25.0",
    "faststream[kafka,redis]>=0.5.42",
    "greenlet>=3.1.1",
    "google-adk>=1.1.1",
    "a2a-sdk>=0.2.8",
    "litellm>=1.72.0",
    "httpx>=0.25.0",
    "redis>=5.0.0",
    "temporalio>=1.12.0",
]

[project.scripts]
# Standard development and testing commands  
dev = "uvicorn agentarea.main:app --reload --host 0.0.0.0 --port 8000"
test = "python -m pytest tests/integration/repositories/ -k 'not task and not old' --tb=short"
test-unit = "python -m pytest tests/unit/ --tb=short -v"
test-integration = "python -m pytest tests/integration/repositories/ -k 'not task and not old' --tb=short -v"
test-quick = "python -m pytest tests/integration/repositories/ -k 'not task and not old' --tb=no -q"

[tool.uv.workspace]
members = ["venv"]

[dependency-groups]
dev = [
    "ruff>=0.11.4",
    "pyright>=1.1.400",
    "aiosqlite>=0.21.0",
    "pytest>=8.4.0",
    "pytest-asyncio>=1.0.0",
]

[tool.ruff]
target-version = "py312"
line-length = 100

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "F",   # pyflakes
    "I",   # isort
    "W",   # pycodestyle warnings 
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
    "N",   # pep8-naming
    "D",   # pydocstyle
]
ignore = [
    "D102",
    "D103",
    "D107",
    "D101",
    "D100",    # Missing docstring in public module
    "D104",    # Missing docstring in public package
    "D203",    # One blank line required before class docstring
    "D213",    # Multi-line docstring summary should start at the second line
    "E501",    # Line too long
]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["D"]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
line-ending = "auto"
skip-magic-trailing-comma = false

[tool.ruff.lint.flake8-bugbear]
extend-immutable-calls = ["fastapi.Depends", "fastapi.params.Depends", "fastapi.Query", "fastapi.params.Query"]