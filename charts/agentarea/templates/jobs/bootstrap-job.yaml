apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "agentarea.fullname" . }}-bootstrap
  labels:
    {{- include "agentarea.labels" . | nindent 4 }}
    app.kubernetes.io/component: bootstrap
  annotations:
    "helm.sh/hook": post-install,post-upgrade
    "helm.sh/hook-weight": "10"
    "helm.sh/hook-delete-policy": before-hook-creation
spec:
  template:
    metadata:
      name: {{ include "agentarea.fullname" . }}-bootstrap
      labels:
        {{- include "agentarea.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: bootstrap
    spec:
      restartPolicy: Never
      containers:
        - name: bootstrap
          image: "{{ .Values.global.image.registry }}{{ if .Values.global.image.registry }}/{{end}}agentarea/agentarea-bootstrap:latest"
          imagePullPolicy: {{ .Values.global.image.pullPolicy }}
          env:
            # MinIO configuration
            - name: MINIO_ROOT_USER
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.global.secrets.minio }}
                  key: root-user
            - name: MINIO_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.global.secrets.minio }}
                  key: root-password
            - name: MINIO_ENDPOINT
              value: "http://{{ .Release.Name }}-minio:9000"

            # Database configuration
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.global.secrets.postgresql }}
                  key: username
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.global.secrets.postgresql }}
                  key: password
            - name: POSTGRES_HOST
              value: "{{ .Release.Name }}-postgresql"
            - name: POSTGRES_PORT
              value: "{{ .Values.global.database.port }}"
            - name: DATABASE_URL
              value: "postgresql+psycopg2://$(POSTGRES_USER):$(POSTGRES_PASSWORD)@{{ .Release.Name }}-postgresql:{{ .Values.global.database.port }}/{{ .Values.global.database.database }}"

            # Infisical configuration
            - name: INFISICAL_URL
              value: "http://{{ .Release.Name }}-agentarea-infisical:8080"

            # Admin user configuration (can be overridden)
            - name: ADMIN_EMAIL
              value: "admin@example.com"
            - name: ADMIN_PASSWORD
              value: "changeme"
            - name: ORGANIZATION_NAME
              value: "AgentArea"

            # LLM and MCP providers configuration
            - name: LLM_PROVIDERS_YAML
              value: "/app/llm/providers.yaml"
            - name: MCP_PROVIDERS_YAML
              value: "/app/llm/mcp_providers.yaml"
          # TODO: Mount volumes for LLM/MCP provider YAML files if needed
          # volumeMounts:
          #   - name: provider-data
          #     mountPath: /app/llm
          #     readOnly: true
      # volumes:
      #   - name: provider-data
      #     configMap:
      #       name: {{ include "agentarea.fullname" . }}-providers
