{{- $postgresPassword := randAlphaNum 32 -}}
{{- $redisPassword := randAlphaNum 32 -}}
{{- $minioAccessKey := randAlphaNum 20 -}}
{{- $minioSecretKey := randAlphaNum 40 -}}
{{- $authSecret := randAlphaNum 44 | b64enc -}}
{{- $encryptionKey := randAlphaNum 32 | lower -}}

---
# PostgreSQL Secret
apiVersion: v1
kind: Secret
metadata:
  name: {{ .Values.global.secrets.postgresql }}
  labels:
    {{- include "agentarea.labels" . | nindent 4 }}
type: Opaque
data:
  postgres-password: {{ $postgresPassword | b64enc | quote }}
  password: {{ $postgresPassword | b64enc | quote }}
  username: {{ "postgres" | b64enc | quote }}

---
# Redis Secret
apiVersion: v1
kind: Secret
metadata:
  name: {{ .Values.global.secrets.redis }}
  labels:
    {{- include "agentarea.labels" . | nindent 4 }}
type: Opaque
data:
  redis-password: {{ $redisPassword | b64enc | quote }}

---
# MinIO Secret
apiVersion: v1
kind: Secret
metadata:
  name: {{ .Values.global.secrets.minio }}
  labels:
    {{- include "agentarea.labels" . | nindent 4 }}
type: Opaque
data:
  root-user: {{ $minioAccessKey | b64enc | quote }}
  root-password: {{ $minioSecretKey | b64enc | quote }}

---
# Application Secrets (JWT, Encryption)
apiVersion: v1
kind: Secret
metadata:
  name: {{ .Values.global.secrets.application }}
  labels:
    {{- include "agentarea.labels" . | nindent 4 }}
type: Opaque
data:
  # JWT secret for authentication
  auth-secret: {{ $authSecret | quote }}
  # Encryption key for platform encryption/decryption
  encryption-key: {{ $encryptionKey | b64enc | quote }}

