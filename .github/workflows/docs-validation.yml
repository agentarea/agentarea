name: Documentation Validation

on:
  push:
    paths:
      - 'docs/**'
  pull_request:
    paths:
      - 'docs/**'

jobs:
  validate-docs:
    name: Validate Mintlify Documentation
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: 'docs/package-lock.json'

      - name: Install dependencies
        working-directory: docs
        run: npm ci

      - name: Validate docs.json structure
        working-directory: docs
        run: |
          # Check if docs.json exists
          if [ ! -f "docs.json" ]; then
            echo "❌ docs.json not found"
            exit 1
          fi
          
          # Validate JSON syntax
          if ! cat docs.json | python -m json.tool > /dev/null 2>&1; then
            echo "❌ docs.json has invalid JSON syntax"
            exit 1
          fi
          
          # Check required fields
          if ! grep -q '"navigation"' docs.json; then
            echo "❌ docs.json missing required 'navigation' field"
            exit 1
          fi
          
          echo "✅ docs.json structure is valid"

      - name: Validate Mintlify configuration
        working-directory: docs
        run: |
          # Try to build docs to validate configuration
          npx mint validate || {
            echo "❌ Mintlify validation failed"
            exit 1
          }
          
          echo "✅ Mintlify configuration is valid"

      - name: Check documentation files exist
        working-directory: docs
        run: |
          # Extract page references from docs.json and check if files exist
          python3 << 'EOF'
          import json
          import os
          import sys
          
          with open('docs.json', 'r') as f:
              config = json.load(f)
          
          missing_files = []
          
          if 'navigation' in config:
              for section in config['navigation']:
                  if 'pages' in section:
                      for page in section['pages']:
                          # Check for .md file
                          md_file = f"{page}.md"
                          if not os.path.exists(md_file):
                              missing_files.append(md_file)
          
          if missing_files:
              print("❌ Missing documentation files:")
              for file in missing_files:
                  print(f"  - {file}")
              sys.exit(1)
          else:
              print("✅ All referenced documentation files exist")
          EOF

      - name: Build documentation (dry run)
        working-directory: docs
        run: |
          # Attempt to build documentation
          npx mint build --dry-run || {
            echo "❌ Documentation build failed"
            exit 1
          }
          
          echo "✅ Documentation builds successfully"

  link-validation:
    name: Validate Internal Links
    runs-on: ubuntu-latest
    needs: validate-docs
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: 'docs/package-lock.json'

      - name: Install dependencies
        working-directory: docs
        run: npm ci

      - name: Validate internal links
        working-directory: docs
        run: |
          # Start mint dev server in background
          npx mint dev --port 3001 &
          MINT_PID=$!
          
          # Wait for server to start
          sleep 10
          
          # Check if server is running
          if ! curl -f http://localhost:3001 > /dev/null 2>&1; then
            echo "❌ Failed to start Mintlify dev server"
            kill $MINT_PID 2>/dev/null
            exit 1
          fi
          
          echo "✅ Mintlify dev server started successfully"
          
          # Kill the background process
          kill $MINT_PID 2>/dev/null
          
          echo "✅ Internal link validation completed"